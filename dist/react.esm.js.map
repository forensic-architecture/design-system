{"version":3,"file":"react.esm.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/lib/components/Button/Button.React.js","../src/lib/components/Card/atoms/Text.js","../src/lib/utils/format.js","../src/lib/components/Card/atoms/Time.js","../src/lib/utils/index.js","../src/lib/components/Card/atoms/Button.js","../src/lib/components/Card/atoms/AsyncMarkdown.js","../src/lib/components/Card/atoms/Media.js","../src/lib/utils/files.js","../src/lib/components/Card/Card.React.js","../src/lib/components/CardStack/CardStack.React.js","../src/lib/utils/transitions.js","../src/lib/utils/math.js","../src/lib/atoms/Spinner.React.js","../src/lib/templates/card.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  primary,\n  backgroundColor,\n  borderRadius,\n  size,\n  label,\n  normalCursor,\n  ...props\n}) => {\n  const mode = primary ? \"button--primary\" : \"button--secondary\";\n  return (\n    <button\n      type=\"button\"\n      className={[\"button\", `button--${size}`, mode, normalCursor ? 'no-hover': ''].join(\" \")}\n      style={{ backgroundColor: backgroundColor, borderRadius: borderRadius }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How much rounded are they?\n   */\n  borderRadius: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: \"red\",\n  borderRadius: \"0%\",\n  primary: false,\n  size: \"medium\",\n  onClick: undefined,\n};\n","import React, { useState } from \"react\";\n\nconst CardText = ({ title, value, hoverValue = null }) => {\n  const [showHover, setShowHover] = useState(false);\n\n  return (\n    <div className=\"card-cell\">\n      {title ? <h4>{title}</h4> : null}\n      <div\n        style={{\n          width: `fit-content`,\n        }}\n      >\n        <div\n          onMouseOver={() => hoverValue && setShowHover(true)}\n          onMouseOut={() => hoverValue && setShowHover(false)}\n        >\n          {showHover ? (\n            <span\n              style={{\n                pointerEvents: `none`,\n                opacity: 0.8,\n              }}\n            >\n              <em>{hoverValue}</em>\n            </span>\n          ) : (\n            <div\n              style={{\n                pointerEvents: `none`,\n                display: `inline-block`,\n                height: `1.1rem`,\n                borderBottom: hoverValue && `1px rgb(235, 68, 62) dashed`,\n              }}\n            >\n              {value}\n            </div>\n          )}\n        </div>\n        {/* {!showHover && value} */}\n      </div>\n    </div>\n  );\n};\n\nexport default CardText;\n","/*\n * Taken from: https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript\n */\nexport function capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function makeNiceDate(datetime) {\n  if (datetime === null) return null;\n  // see https://stackoverflow.com/questions/3552461/how-to-format-a-javascript-date\n  const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  });\n  const [\n    { value: month },\n    ,\n    { value: day },\n    ,\n    { value: year },\n  ] = dateTimeFormat.formatToParts(datetime);\n\n  return `${day} ${month} ${year}`;\n}\n\nexport const isEmptyString = (s) => s.length === 0;\n","import React from \"react\";\n\nimport copy from \"../../../data/copy.json\";\nimport { isNotNullNorUndefined } from \"../../../utils\";\n\nconst CardTime = ({ title = \"Timestamp\", timelabel, language, precision }) => {\n  const unknownLang = copy[language].cardstack.unknown_time;\n\n  if (isNotNullNorUndefined(timelabel)) {\n    return (\n      <div className=\"card-cell\">\n        {/* <i className=\"material-icons left\">today</i> */}\n        <h4>{title}</h4>\n        {timelabel}\n        {precision && precision !== \"\" ? ` - ${precision}` : null}\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"card-cell\">\n        {/* <i className=\"material-icons left\">today</i> */}\n        <h4>{title}</h4>\n        {unknownLang}\n      </div>\n    );\n  }\n};\n\nexport default CardTime;\n","export * from \"./files\";\nexport * from \"./format\";\nexport * from \"./math\";\nexport * from \"./transitions\";\n\n/**\n * Return whether the variable is neither null nor undefined\n * @param {object} variable\n */\nexport function isNotNullNorUndefined(variable) {\n  return typeof variable !== \"undefined\" && variable !== null;\n}\n","import React from \"react\";\nimport { Button } from \"../../Button/Button.React\";\n\nconst CardButton = ({ text, color = \"#000\", onClick = () => {}, normalCursor }) => (\n  <Button\n    size={\"small\"}\n    backgroundColor={color}\n    borderRadius={\"12px\"}\n    primary={false}\n    label={text}\n    onClick={onClick}\n    normalCursor={normalCursor}\n  />\n);\n\nexport default CardButton;\n","import React, { useState, useEffect } from \"react\";\nimport marked from \"marked\";\n\n// TODO could this be a security vulnerability?\nconst CardAsyncMarkdown = ({ title, value }) => {\n  const [content, setContent] = useState('...')\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(value)\n      const text = await result.text()\n      setContent(text);\n    }\n\n    fetchData()\n  })\n\n  return (\n    <div className=\"card-cell\">\n      {title ? <h4>{title}</h4> : null}\n      <div dangerouslySetInnerHTML={{ __html: marked(`${content}`) }} />\n    </div>\n  );\n};\n\nexport default CardAsyncMarkdown;\n","import React, { useRef } from \"react\";\nimport { useCallback } from \"react\";\nimport { typeForPath } from \"../../../utils\";\n\nconst TITLE_LENGTH = 50;\n// TODO should videos\n//    - play inline\n//    - appear zoomed out/in\n//    - only show cover image and then lightbox when clicked\n//    - show video control plane?\n// TODO landscape image doesn't fit in box properly\nconst Media = ({ src, title }) => {\n  const videoRef = useRef();\n  const onVideoStart = useCallback(() => {\n    return videoRef.current?.play();\n  }, []);\n  const onVideoStop = useCallback(() => {\n    return videoRef.current?.pause();\n  }, []);\n\n  const type = typeForPath(src);\n  const formattedTitle = title && title.length > TITLE_LENGTH ? `${title.slice(0, TITLE_LENGTH + 1)}...` : title;\n\n  switch (type) {\n    case \"Video\":\n      return (\n        <div className=\"card-cell media\">\n          {title && <h4 title={title}>{formattedTitle}</h4>}\n          <video\n            onMouseEnter={onVideoStart}\n            onMouseLeave={onVideoStop}\n            ref={videoRef}\n            // controls\n            // controlsList=\"nodownload noremoteplayback\"\n            disablePictureInPicture\n          >\n            <source src={src} />\n          </video>\n        </div>\n      );\n    case \"Image\":\n      return (\n        <div className=\"card-cell media\">\n          {title && <h4 title={title}>{formattedTitle}</h4>}\n          <div className=\"img-wrapper\">\n            <img\n              src={src}\n              alt=\"an inline photograph for the event card component\"\n            />\n          </div>\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default Media;\n","export function typeForPath(path) {\n  let type;\n  path = path.trim();\n  switch (true) {\n    case /\\.((png)|(jpg)|(jpeg))$/.test(path):\n      type = \"Image\";\n      break;\n    case /\\.(mp4)$/.test(path):\n      type = \"Video\";\n      break;\n    case /\\.(md)$/.test(path):\n      type = \"Text\";\n      break;\n    case /\\.(pdf)$/.test(path):\n      type = \"Document\";\n      break;\n    default:\n      type = \"Unknown\";\n      break;\n  }\n  return type;\n}\n\nexport function selectTypeFromPathWithPoster(path, poster) {\n  return { type: typeForPath(path), path, poster };\n}\n","import React from \"react\";\n\nimport CardText from \"./atoms/Text\";\nimport CardTime from \"./atoms/Time\";\nimport CardButton from \"./atoms/Button\";\nimport CardCustom from \"./atoms/CustomField\";\nimport CardAsyncMarkdown from \"./atoms/AsyncMarkdown\";\nimport CardMedia from \"./atoms/Media\";\n\nimport { makeNiceDate, isEmptyString } from \"../../utils\";\n\nexport const Card = ({\n  content = [],\n  isLoading = true,\n  onSelect = () => {},\n  sources = [],\n  isSelected = false,\n  language = \"en-US\",\n}) => {\n  // NB: should be internationalized.\n  const renderTime = (field) => (\n    <CardTime\n      language={language}\n      timelabel={makeNiceDate(field.value)}\n      {...field}\n    />\n  );\n\n  const renderMedia = ({ media, idx }) => {\n    return <CardMedia key={idx} src={media.src} title={media.title} />;\n  };\n\n  function renderField(field) {\n    switch (field.kind) {\n      case \"media\":\n        return (\n          <div className=\"card-cell\">\n            {\n              field.value.map((media, idx) => {\n                return renderMedia({ media, idx });\n              })\n            }\n          </div>\n        );\n      case \"line\":\n        return (\n          <div style={{ height: `1rem`, width: `100%` }}>\n            <hr />\n          </div>\n        );\n      case \"line-break\":\n        return (\n          <div style={{ height: `${field.times || 1}rem`, width: `100%` }} />\n        );\n      case \"item\":\n        // this is like a span\n        return null;\n      case \"markdown\":\n        return <CardAsyncMarkdown {...field} />;\n      case \"tag\":\n        return (\n          <div\n            className=\"card-cell m0\"\n            style={{\n              textTransform: `uppercase`,\n              fontSize: `.8em`,\n              lineHeight: `.8em`,\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: `flex-${field.align || `start`}`,\n              }}\n            >\n              {field.value}\n            </div>\n          </div>\n        );\n      case \"button\":\n        return (\n          <div className=\"card-cell\">\n            {field.title && <h4>{field.title}</h4>}\n            {/* <div className=\"card-row\"> */}\n            {field.value.map((t, idx) => (\n              <CardButton key={`card-button-${idx}`} {...t} />\n            ))}\n            {/* </div> */}\n          </div>\n        );\n      case \"text\":\n        return !isEmptyString(field.value) && <CardText {...field} />;\n      case \"date\":\n        return renderTime(field);\n      case \"links\":\n        return (\n          <div className=\"card-cell\">\n            {field.title && <h4>{field.title}</h4>}\n            <div className=\"card-row m0\">\n              {field.value.map(({ text, href }, idx) => (\n                <a href={href} key={`card-links-url-${idx}`}>\n                  {text}\n                </a>\n              ))}\n            </div>\n          </div>\n        );\n      case \"list\":\n        // Only render if some of the list's strings are non-empty\n        const shouldFieldRender =\n          !!field.value.length &&\n          !!field.value.filter((s) => !isEmptyString(s)).length;\n        return shouldFieldRender ? (\n          // <div className=\"card-cell\">\n          <div>\n            {field.title && <h4>{field.title}</h4>}\n            <div className=\"card-row m0\">\n              {field.value.map((t, idx) => (\n                <CardText key={`card-list-text-${idx}`} value={t} {...t} />\n              ))}\n            </div>\n          </div>\n        ) : null;\n      default:\n        return null;\n    }\n  }\n\n  function renderRow(row) {\n    return (\n      <div className=\"card-row\">\n        {row.map((field) => (\n          <>{renderField(field)}</>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <li\n      className={`event-card ${isSelected ? \"selected\" : \"\"}`}\n      onClick={onSelect}\n    >\n      {content.map((row) => renderRow(row))}\n    </li>\n  );\n};\n","import React, { useRef, useEffect, createRef } from \"react\";\n\nimport { Card } from \"../Card/Card.React.js\";\nimport copy from \"../../data/copy.json\";\nimport { scrollToElement } from \"../../utils\";\n\nexport const CardStack = ({\n  isCardstack = true,\n  isLoading = false,\n  language = `en-US`,\n  narrative = null,\n  onHighlight = () => {},\n  onSelect = () => {},\n  onToggleCardstack = () => {},\n  onViewSource = () => {},\n  timelineDims = {\n    height: 250,\n    width: 0,\n    marginLeft: 100,\n    marginTop: 15,\n    marginBottom: 60,\n    contentHeight: 200,\n    width_controls: 100,\n  },\n  selected = null,\n  sourceError = false,\n}) => {\n  const refs = useRef([]);\n  const refCardStack = useRef();\n  const refCardStackContent = useRef();\n\n  // this.refs = {};\n  // this.refCardStack = React.createRef();\n  // this.refCardStackContent = React.createRef();\n\n  useEffect(() => {\n    const isNarrative = !!narrative;\n    if (isNarrative) {\n      scrollToElement({\n        from: refs[narrative.current].current.offsetTop,\n        to: refCardStack.current,\n        duration: 500,\n      });\n    }\n  }, [narrative]);\n\n  useEffect(() => {}, [selected]);\n\n  const renderCards = (events, selections) => {\n    // if no selections provided, select all\n    if (!selections) {\n      selections = events.map((e) => true);\n    }\n    refs.current = [];\n\n    return events.map((event, idx) => {\n      const cardRef = createRef();\n      refs.current[idx] = cardRef;\n\n      // TODO do we need to pass the get*() funcs to the Card?\n      return (\n        <Card\n          key={`card-stack-iten-${idx}`}\n          event={event}\n          ref={cardRef}\n          sourceError={sourceError}\n          language={language}\n          isLoading={isLoading}\n          isSelected={selections[idx]}\n          onViewSource={onViewSource}\n          onHighlight={onHighlight}\n          onSelect={onSelect}\n          idx={idx}\n          inlineMedia={event?.sources[0]?.paths}\n        />\n      );\n    });\n  };\n\n  const renderSelectedCards = () => {\n    return selected.length > 0 ? renderCards(selected) : null;\n  };\n\n  const renderNarrativeCards = () => {\n    const showing = narrative.steps;\n\n    const selections = showing.map((_, idx) => idx === narrative.current);\n\n    return renderCards(showing, selections);\n  };\n\n  const renderCardStackHeader = () => {\n    const headerLang = copy[language].cardstack.header;\n\n    return (\n      <div\n        id=\"card-stack-header\"\n        className=\"card-stack-header\"\n        onClick={() => onToggleCardstack()}\n      >\n        <button className=\"side-menu-burg is-active\">\n          <span />\n        </button>\n        <p className=\"header-copy top\">{`${selected.length} ${headerLang}`}</p>\n      </div>\n    );\n  };\n\n  const renderCardStackContent = () => {\n    return (\n      <div id=\"card-stack-content\" className=\"card-stack-content\">\n        <ul>{renderSelectedCards()}</ul>\n      </div>\n    );\n  };\n\n  const renderNarrativeContent = () => {\n    return (\n      <div\n        id=\"card-stack-content\"\n        className=\"card-stack-content\"\n        ref={refCardStackContent}\n      >\n        <ul>{renderNarrativeCards()}</ul>\n      </div>\n    );\n  };\n\n  const render = () => {\n    // TODO: make '237px', which is the narrative header, less hard-coded\n    const height = `calc(100% - 237px - ${timelineDims.height}px)`;\n    if (selected?.length > 0) {\n      if (!narrative) {\n        return (\n          <div\n            id=\"card-stack\"\n            className={`card-stack\n            ${isCardstack ? \"\" : \" folded\"}`}\n          >\n            {renderCardStackHeader()}\n            {renderCardStackContent()}\n          </div>\n        );\n      } else {\n        return (\n          <div\n            id=\"card-stack\"\n            ref={refCardStack}\n            className={`card-stack narrative-mode\n            ${isCardstack ? \"\" : \" folded\"}`}\n            style={{ height }}\n          >\n            {renderNarrativeContent()}\n          </div>\n        );\n      }\n    }\n\n    return <div />;\n  };\n\n  return <>{render()}</>;\n};\n","import { easeInOutQuad } from \"./math\";\n\nexport const scrollToElement = ({ to = null, duration = 500 }) => {\n  const element = to;\n  const cardScroll = window.offsetTop;\n\n  let start = element.scrollTop;\n  let change = cardScroll - start;\n  let currentTime = 0;\n  const increment = 20;\n\n  const animateScroll = function () {\n    currentTime += increment;\n    const val = easeInOutQuad(currentTime, start, change, duration);\n    element.scrollTop = val;\n    if (currentTime < duration) setTimeout(animateScroll, increment);\n  };\n\n  animateScroll();\n};\n","// t = current time\n// b = start value\n// c = change in value\n// d = duration\nexport const easeInOutQuad = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) return (c / 2) * t * t + b;\n  t -= 1;\n  return (-c / 2) * (t * (t - 2) - 1) + b;\n};\n","import React from \"react\";\n\nexport const Spinner = ({ small }) => {\n  return (\n    <div className={`spinner ${small ? \"small\" : \"\"}`}>\n      <div className=\"double-bounce-overlay\" />\n      <div className=\"double-bounce\" />\n    </div>\n  );\n};\n","function produceMediaInline(path) {\n  const ext = path.match(/\\.[0-9a-z]+$/i)[0]\n  switch (ext) {\n    case '.jpg':\n    case '.png':\n      return [{ kind: 'media', value: [{ src: path }] }]\n    case '.pdf':\n      return [{ kind: 'button', value: [{ text: 'See full PDF', color: 'white', href: path, onClick: () => window.open(path, '_blank') }]  }]\n    case '.md':\n      return [{ kind: 'markdown', value: path }]\n    default:\n      return null\n  }\n}\n\nexport const generateCardLayout = {\n  default: ({ event }) => {\n    return [\n      [\n        {\n          kind: \"date\",\n          title: \"Incident Date\",\n          value: event.datetime || event.date || ``,\n        },\n        {\n          kind: \"text\",\n          title: \"Location\",\n          value: event.location || `—`,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"text\",\n          title: \"Summary\",\n          value: event.description || ``,\n          scaleFont: 1.1,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.8 }],\n      // [\n      //   {\n      //     kind: \"button\",\n      //     title: \"Associations\",\n      //     value: event.associations.map(association => {\n      //       return {\n      //         text: association.title,\n      //         color: null,\n      //         onClick: () => {\n      //           console.log(\"hello\");\n      //         },\n      //       }\n      //     })\n      //   },\n      // ],\n      ...event.sources.map((source, idx) => {\n        if (source.paths.length <= 0) return null\n        return [\n          [{\n            kind: 'button',\n            title: `Source ${idx+1}`,\n            value: [{ text: source.title, color: null, href: source.url, onClick: () => window.open(source.url, \"_blank\") }],\n          }],\n          [{ kind: 'text', value: source.description }],\n          ...source.paths.map(produceMediaInline).filter(s => s !== null)\n        ]\n      }).filter(src => src !== null).flatMap(x => x),\n    ]\n  },\n  basic: ({ event }) => {\n    return [\n      [\n        {\n          kind: \"date\",\n          title: \"Incident Date\",\n          value: event.datetime || event.date || ``,\n        },\n        {\n          kind: \"text\",\n          title: \"Location\",\n          value: event.location || `—`,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"text\",\n          title: \"Summary\",\n          value: event.description || ``,\n          scaleFont: 1.1,\n        },\n      ],\n    ];\n  },\n  us_protests: ({ event, colors, coloringSet, getFilterIdxFromColorSet }) => {\n    let precision;\n    switch (event.location_precision) {\n      case `Generalised`:\n        precision = `No location data`;\n        break;\n      case `Estimated`:\n        precision = `Precise location estimated`;\n        break;\n      case `Self-reported`:\n        precision = `Location reported by witness`;\n        break;\n      case `Confirmed`:\n      default:\n        precision = null;\n        break;\n    }\n\n    return [\n      [\n        {\n          kind: \"tag\",\n          align: \"end\",\n          value: `Incident #${event.incident_id}`,\n        },\n      ],\n      [{ kind: \"line\" }],\n      [\n        { kind: \"date\", title: \"Incident Date\", value: event.datetime },\n        {\n          kind: \"text\",\n          title: \"Location\",\n          hoverValue: precision,\n          value: event.location,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"text\",\n          title: \"Summary\",\n          value: event.description,\n          scaleFont: 1.1,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"button\",\n          title: \"Type of Violation\",\n          value: event.associations.slice(0, -1).map((association) => ({\n            text: association,\n            color:\n              getFilterIdxFromColorSet(association, coloringSet) >= 0\n                ? colors[getFilterIdxFromColorSet(association, coloringSet)]\n                : null,\n            normalCursor: true,\n          })),\n        },\n        {\n          kind: \"button\",\n          title: \"Against\",\n          value: event.associations.slice(-1).map((category) => ({\n            text: category,\n            color: null,\n            normalCursor: true,\n          })),\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.2 }],\n      [\n        {\n          kind: \"list\",\n          title: \"Law Enforcement Agencies\",\n          value: event.le_agencys,\n        },\n      ],\n      [\n        {\n          kind: \"text\",\n          title: \"Name of reporter(s)\",\n          value: event.journalist_name,\n        },\n        {\n          kind: \"text\",\n          title: \"Network\",\n          value: event.news_organisation,\n        },\n      ],\n      [\n        {\n          kind: event.hide_source === \"FALSE\" ? \"button\" : \"markdown\",\n          title: \"Sources\",\n          value:\n            event.hide_source === \"FALSE\"\n              ? event.links.map((href, idx) => ({\n                  text: `Source ${idx + 1}`,\n                  href,\n                  color: null,\n                  onClick: () => window.open(href, \"_blank\"),\n                }))\n              : \"Source hidden to protect the privacy and dignity of civilians. Read more [here](https://staging.forensic-architecture.org/wp-content/uploads/2020/09/2020.14.09-FA-Bcat-Mission-Statement.pdf).\",\n        },\n      ],\n    ];\n  },\n  yemen: ({ event }) => {\n    let precision;\n    switch (event.precision_exact) {\n      case `YES`:\n        precision = `Precise location confirmed`;\n        break;\n      case `NO`:\n        precision = `Location estimated`;\n        break;\n      default:\n        precision = null;\n        break;\n    }\n\n    return [\n      [\n        { kind: \"date\", title: \"Incident Date\", value: event.datetime },\n        {\n          kind: \"text\",\n          title: \"Location\",\n          hoverValue: precision,\n          value: event.location,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"text\",\n          title: \"Summary\",\n          value: event.description,\n          scaleFont: 1.1,\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"text\",\n          title: \"Remnants found\",\n          value: event.remnants_found\n        }\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [\n        {\n          kind: \"text\",\n          title: \"Manufacturer\",\n          value: event.manufacturer\n        }\n      ],\n      [{ kind: \"line-break\", times: 0.4 }],\n      [ event.type_of_attack && (\n        {\n          kind: \"button\",\n          title: \"Type of Attack\",\n          value: event.associations.filter(a => a.title === event.type_of_attack).map((association) => ({\n            text: event.type_of_attack,\n            color: association.colour,\n            normalCursor: true,\n          })),\n        }),\n      ],\n      [{ kind: \"line-break\", times: 0.2 }],\n      [\n        {\n          kind: \"button\",\n          title: \"Sources\",\n          value: event.links.map((href, idx) => ({\n                  text: `Source ${idx + 1}`,\n                  href,\n                  color: null,\n                  onClick: () => window.open(href, \"_blank\"),\n                }))\n        },\n      ],\n      [{ kind: \"line-break\", times: 0.2 }],\n      [\n        {\n          kind: \"media\",\n          title: \"Media\",\n          value: event.media\n        }\n      ],\n    ];\n  },\n};\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Button","primary","backgroundColor","borderRadius","size","label","normalCursor","props","mode","React","className","join","propTypes","PropTypes","bool","string","oneOf","isRequired","onClick","func","defaultProps","undefined","CardText","title","value","hoverValue","useState","showHover","setShowHover","width","onMouseOver","onMouseOut","pointerEvents","opacity","display","height","borderBottom","makeNiceDate","datetime","Intl","DateTimeFormat","year","month","day","formatToParts","isEmptyString","s","length","CardTime","timelabel","language","precision","unknownLang","copy","cardstack","unknown_time","CardButton","text","color","CardAsyncMarkdown","content","setContent","useEffect","fetch","result","fetchData","dangerouslySetInnerHTML","__html","marked","Media","src","videoRef","useRef","onVideoStart","useCallback","current","_videoRef$current","play","onVideoStop","_videoRef$current2","pause","path","trim","test","typeForPath","formattedTitle","slice","TITLE_LENGTH","onMouseEnter","onMouseLeave","disablePictureInPicture","alt","Card","isLoading","onSelect","sources","isSelected","renderField","field","kind","map","media","idx","CardMedia","key","renderMedia","times","textTransform","fontSize","lineHeight","justifyContent","align","t","renderTime","href","filter","row","renderRow","CardStack","isCardstack","narrative","onHighlight","onToggleCardstack","onViewSource","timelineDims","marginLeft","marginTop","marginBottom","contentHeight","width_controls","selected","sourceError","refs","refCardStack","refCardStackContent","to","duration","element","cardScroll","window","offsetTop","start","scrollTop","change","currentTime","animateScroll","b","c","val","setTimeout","scrollToElement","from","headerLang","renderCards","events","selections","e","event","cardRef","createRef","inlineMedia","_event$sources$","paths","renderCardStackContent","id","renderNarrativeContent","showing","steps","_","header","Spinner","small","produceMediaInline","match","open","generateCardLayout","default","date","location","description","scaleFont","source","url","flatMap","x","basic","us_protests","colors","coloringSet","getFilterIdxFromColorSet","location_precision","incident_id","associations","association","category","le_agencys","journalist_name","news_organisation","hide_source","links","yemen","precision_exact","remnants_found","manufacturer","type_of_attack","a","colour"],"mappings":"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"}